apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: db-password
spec:
  # refreshInterval: 30s
  refreshPolicy: OnChange
  secretStoreRef:
    kind: ClusterSecretStore
    name: azure-kv-store

  target:
    name: postgresql-app #name of a secret in k8s
    creationPolicy: Merge #Owner, Merge, None
    #deletionPolicy: Retain, Delete
    template:
      metadata:
        labels:
          cnpg.io/reload: "true"
      data:
        password: "{{ .password }}"
        pgpass: "postgresql-rw:5432:app:app:{{ .password }}"
        jdbc-uri: "jdbc:postgresql://postgresql-rw.default:5432/app?password={{ .password }}&user=app"
        uri: "postgresql://app:{{ .password }}@postgresql-rw.default:5432/app"
        fqdn-uri: postgresql://app:{{ .password }}@postgresql-rw.postgres-db.svc.cluster.local:5432/app
        fqdn-jdbc-uri: jdbc:postgresql://postgresql-rw.postgres-db.svc.cluster.local:5432/app?password={{ .password }}&user=app    
 #map secrets from azure keyvault to kubernetes secrets
  data:
    - secretKey: password # key name of k8s secret
      remoteRef:
        key: db-password

---

apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: backup-access-key
spec:
  # refreshInterval: 30s
  refreshPolicy: OnChange
  secretStoreRef:
    kind: ClusterSecretStore
    name: azure-kv-store

  target:
    name: storage-creds #name of a secret in k8s
    creationPolicy: Owner #Owner, Merge, None
    #deletionPolicy: Retain, Delete
  #map secrets from azure keyvault to kubernetes secrets
  data:
    - secretKey: connection_string # key name of k8s secret
      remoteRef:
        key: backup-access-key

